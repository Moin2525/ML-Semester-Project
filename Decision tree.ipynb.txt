# Decision Tree Classifier

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Separate the features (X) and the target variable (y)
X = df.drop("PNDM", axis=1)
y = df["PNDM"]

# Split the data into training and testing sets 80 20 ration
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.tree import DecisionTreeClassifier
import joblib

#  Train the Decision tree classifier
dt = DecisionTreeClassifier()
dt.fit(X_train, y_train)
joblib.dump(dt, 'trained_model.pkl' )

# Predicting the model
dt_predictions = dt.predict(X_test)

# Printing the accuracy
dt_accuracy =100* accuracy_score(y_test, dt_predictions)
dt_accuracy